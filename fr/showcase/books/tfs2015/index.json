[{"content":"Lors d\u0026rsquo;une tentative d\u0026rsquo;un copier/coller (pression longue) sur un champ Text sur IOS le message suivant peut apparaitre :\nThe getter \u0026lsquo;pasteButtonLabel\u0026rsquo; was called on null.\nReceiver: null\nTried calling: pasteButtonLabel\r Si tel est le cas, c\u0026rsquo;est qu\u0026rsquo;IOS n\u0026rsquo;arrive tout simplement pas à trouver la localisation adaptée pour les boutons d\u0026rsquo;actions.\nPour corriger ce point il suffit de créer un LocalizationsDelegate personnalisé pour IOS :\n1 2 3 4 5 6 7 8 9 10 11 12  class CupertinoLocalisationsDelegate extends LocalizationsDelegate\u0026lt;CupertinoLocalizations\u0026gt; {\rconst CupertinoLocalisationsDelegate();\r@override\rbool isSupported(Locale locale) =\u0026gt; true;\r@override\rFuture\u0026lt;CupertinoLocalizations\u0026gt; load(Locale locale) =\u0026gt; DefaultCupertinoLocalizations.load(locale);\r@override\rbool shouldReload(CupertinoLocalisationsDelegateold) =\u0026gt; false;\r}\r  Et de l\u0026rsquo;utiliser au niveau de la MaterialApp :\n1 2 3 4 5 6 7  MaterialApp(\r...\rlocalizationsDelegates: const \u0026lt;LocalizationsDelegate\u0026lt;dynamic\u0026gt;\u0026gt;[\rGlobalMaterialLocalizations.delegate,\rGlobalWidgetsLocalizations.delegate,\r+ CupertinoLocalisationsDelegate(),\r ], ...\r  A noter qu\u0026rsquo;avec cette classe la localisation utilisée pour les actions sera celle par défaut du téléphone.\nPour corriger ce point il faut modifier la logique de la méthode load(Local locale) qui permet de définir la localisation.\r ","description":"Exception : The getter \"pasteButtonLabel\" was called on null","id":7,"section":"posts","tags":["flutter","dart","ios","mobile","exception"],"title":"[Flutter] Exception lors d'une copie sous IOS","uri":"https://golapadeog.github.io/blog/fr/2019/10/21/flutter-exception-lors-dune-copie-sous-ios/"}]